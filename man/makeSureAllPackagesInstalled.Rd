% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/packages.R
\name{makeSureAllPackagesInstalled}
\alias{makeSureAllPackagesInstalled}
\title{Pre-test for packages in SpaDES modules}
\usage{
makeSureAllPackagesInstalled(
  modulePath,
  doInstalls = TRUE,
  verbose = getOption("Require.verbose")
)
}
\arguments{
\item{modulePath}{The path to modules, as per \code{SpaDES.core::setPaths}. Can
be a vector of multiple character strings representing multiple locations
of modules.}

\item{doInstalls}{logical. If \code{TRUE}, the default, then this function will attempt to do the
package installations. If \code{FALSE}, then this function returns the character
vector of packages (and version information) that is unduplicated, i.e.,
the one with a highest minimum version specification.}

\item{verbose}{Numeric or logical indicating how verbose should the function
be. If -1 or -2, then as little verbosity as possible. If 0 or FALSE,
then minimal outputs; if \code{1} or TRUE, more outputs; \code{2} even more. NOTE: in
\code{Require} function, when \code{verbose >= 2}, the return object will have an
attribute: \code{attr(.., "Require")} which has lots of information about the
processes of the installs.}
}
\description{
This function can be put at the start of project code.
It will only be necessary if there are multiple \code{simInit} calls (i.e., the project doesn't use only one call).
It will check all modules in \code{modulePath} for package dependencies.
It will prompt.
}
\examples{
\dontrun{
makeSureAllPackagesInstalled(modulePath = "modules")

# Multiple modulePath
makeSureAllPackagesInstalled(c(
  "~/GitHub/WBI_fireSense/modules/",
  "~/GitHub/SpaDES-modules/modules/"
))
}
}
